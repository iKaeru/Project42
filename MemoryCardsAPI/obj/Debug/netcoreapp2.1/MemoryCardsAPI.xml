<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MemoryCardsAPI</name>
    </assembly>
    <members>
        <member name="T:MemoryCardsAPI.Controllers.CardsController">
            <summary>
            Cards
            </summary>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CardsController.CreateAsync(Models.CardItem.CardCreationInfo,System.Threading.CancellationToken)">
            <summary>
            Create Card
            </summary>
            <param name="cardCreationInfo"></param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
            <returns code="404"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CardsController.GetCardsForUser(System.Threading.CancellationToken)">
            <summary>
            Get All Cards For User
            </summary>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CardsController.GetCardByIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Card By Id
            </summary>
            <param name="id">Идентификатор карты</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CardsController.UpdateCardByIdAsync(System.String,Client.Models.CardItem.CardPatchInfo,System.Threading.CancellationToken)">
            <summary>
            Update Card By Id
            </summary>
            <param name="id">Идентификатор карты</param>
            <param name="cardToUpdate">Информация о карте для редактирования</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CardsController.Delete(System.String)">
            <summary>
            Delete Card By Id
            </summary>
            <param name="id">Идентификатор карты</param>
            <returns code="200"></returns>
        </member>
        <member name="T:MemoryCardsAPI.Controllers.CollectionsController">
            <summary>
            Collections
            </summary>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.CreateDefaultAsync(System.Threading.CancellationToken)">
            <summary>
            Create Collection With Default Name
            </summary>
            <param name="cancellationToken"></param>
            <returns code="200"></returns> 
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.CreateAsync(System.Threading.CancellationToken,System.String)">
            <summary>
            Create Collection By Name
            </summary>
            <param name="cancellationToken"></param>
            <param name="name">Имя коллекции</param>
            <returns code="200"></returns> 
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.AddCardToCollection(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add Card To A Collection By Name
            </summary>
            <param name="collectionName">Имя коллекции</param>
            <param name="cardId">Идентификатор карты для добавления в коллекцию</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.ShowCollection(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Collection By Name
            </summary>
            <param name="collectionName">Название коллекции</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.ListCollections(System.Threading.CancellationToken)">
            <summary>
            Shows all existing collections For User
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.LearnedCollectionsAsync(System.Threading.CancellationToken)">
            <summary>
            Shows number of learned collections For User
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.UpdateCardByIdAsync(System.String,Client.Models.CardsCollection.CardsCollectionPatchInfo,System.Threading.CancellationToken)">
            <summary>
            Update Collection By Name
            </summary>
            <param name="collectionName">Название коллекции</param>
            <param name="updateInfo">Информация о коллекции для редактирования</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.CollectionsController.Delete(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete Collection By Name
            </summary>
            <param name="collectionName">Название коллекции</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="T:MemoryCardsAPI.Controllers.TrainingsController">
            <summary>
            Cards
            </summary>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.TrainingsController.CreateCardTraining(System.String,System.Threading.CancellationToken)">
            <summary>
            Create Card Training
            </summary>
            <param name="id">Идентификатор карты, с которой происходит тренировка</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.TrainingsController.GetCardTrainingById(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Card Training By Id
            </summary>
            <param name="id">Идентификатор тренировки</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.TrainingsController.GetCardTraining(System.String,System.Threading.CancellationToken)">
            <summary>
            Get Card Training By Card Id
            </summary>
            <param name="id">Идентификатор карты, с которой происходит тренировка</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.TrainingsController.TrainWithCard(Client.Models.Training.TrainingPatchInfo,System.Threading.CancellationToken)">
            <summary>
            Update Card Training By Card Id
            </summary>
            <param name="training">Информация для обновления тренировки</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.TrainingsController.Delete(System.String)">
            <summary>
            Delete Training By Id
            </summary>
            <param name="id">Идентификатор тренировки</param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.TrainingsController.GetTodaysTraining(System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get Cards That Require Training For Selected Day
            </summary>
            <param name="date">Дата к которой получить тренировку (обычно надо указывать ту дату, которая сегодня) </param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.TrainingsController.GetNumberOfCardsInBox(Models.Training.MemorizationBoxes,System.Threading.CancellationToken)">
            <summary>
            Get count of cards in the box
            </summary>
            <param name="box"> box where to count cards </param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.UsersController.Authenticate(Models.User.UserLoginInfo)">
            <summary>
            Authorizatе User
            </summary>
            <param name="userDto">Информация о пользователе для авторизации</param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.UsersController.Register(Models.User.UserRegistrationInfo,System.Threading.CancellationToken)">
            <summary>
            Register User
            </summary>
            <param name="userDto">Информация о пользователе для регистрации</param>
            <param name="cancellationToken"></param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.UsersController.GetById(System.String)">
            <summary>
            Get User By Id
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.UsersController.Update(System.String,Client.Models.User.UserPatchInfo)">
            <summary>
            Update User By Id
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <param name="userToUpdate">Информация о пользователе для редактирования</param>
            <returns code="200"></returns>
        </member>
        <member name="M:MemoryCardsAPI.Controllers.UsersController.Delete(System.String)">
            <summary>
            Delete User By Id
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <returns code="200"></returns>
        </member>
    </members>
</doc>
